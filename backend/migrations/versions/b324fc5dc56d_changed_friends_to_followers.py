"""changed friends to followers

Revision ID: b324fc5dc56d
Revises: a7163da23160
Create Date: 2025-07-08 21:18:50.413234

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b324fc5dc56d'
down_revision = 'a7163da23160'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('followers',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id')
    )


    # Migrate data from friends (mutual) to followers (one-way)
    # Assumes 'friends' table still exists at this point
    op.execute("""
        INSERT INTO followers (follower_id, followed_id)
        SELECT user_id, friend_id FROM friends
        UNION
        SELECT friend_id, user_id FROM friends
    """)


    op.drop_table('friends')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('friends',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('friend_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], name=op.f('friends_friend_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('friends_user_id_fkey')),
    sa.PrimaryKeyConstraint('user_id', 'friend_id', name=op.f('friends_pkey'))
    )


    # Convert back from followers (one-way) to mutual friends (one entry per pair)
    # Only insert unique pairs (user_id < friend_id) to avoid duplicates
    op.execute("""
        INSERT INTO friends (user_id, friend_id)
        SELECT DISTINCT
            LEAST(follower_id, followed_id),
            GREATEST(follower_id, followed_id)
        FROM followers
        WHERE follower_id IN (
            SELECT followed_id FROM followers
            WHERE followers.follower_id = follower_id
        )
        AND follower_id < followed_id
    """)


    op.drop_table('followers')
    # ### end Alembic commands ###
